name: test

on:
  push:
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-20.04]
        python: ["3.11.9"]

    steps:
      - name: <Setup> Check out the repository
        uses: actions/checkout@v4

      - name: <Setup> Install Poetry
        run: pipx install poetry

      - name: <Setup> Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: poetry

      - name: <Setup> Install Python dependencies
        run: |
          poetry install --with=test

      - name: <Test> Validate poetry.lock
        run: |
          poetry lock --no-update
          git diff --exit-code

      - name: <Test> Check format
        run: poetry run task lint

      - name: <Test> Test codes and coverage
        run: poetry run coverage run --omit=test/* -m pytest
      - name: <Deploy> Submit coverage results to Coveralls
        if: matrix.os == 'ubuntu-20.04'
        run: poetry run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check licenses
        shell: bash
        run: |
          poetry run task update-licenses

      - name: Test names by checking typo
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        uses: crate-ci/typos@v1.12.12

  shellcheck:
    runs-on: ubuntu-20.04
    steps:
      - name: <Setup> Check out the repository
        uses: actions/checkout@v4

      - name: <Setup> Install ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: <Test> Check shell files
        run: git ls-files | grep -E '\.(ba)?sh' | xargs shellcheck
