[tool.taskipy.tasks]
serve = "python run.py"
format = "pysen run format"
lint = "pysen run lint"
typos = "typos"
test = "pytest"
update-snapshots = "pytest --snapshot-update"
update-licenses = "bash tools/create_venv_and_generate_licenses.bash"
build = "poetry run task update-licenses && pyinstaller --noconfirm run.spec"

[tool.pysen]
version = "0.11.0"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
# enable_mypy = true
enable_mypy = false  # pysen から使うと意図的に unreachable にしているコードがエラーになるため (pysen は設定をカスタムできない)
mypy_preset = "strict"
mypy_plugins = [
  { function = "numpy.typing.mypy_plugin" },
  { function = "pydantic.mypy" },
]
line_length = 88
py_version = "py311"
isort_known_first_party = ["voicevox_engine"]
isort_known_third_party = ["numpy"]
[[tool.pysen.lint.mypy_targets]]
paths = ["."]

[tool.black] # automatically generated by pysen
# pysen ignores and overwrites any modifications
line-length = 88
target-version = ["py311"]

[tool.isort] # automatically generated by pysen
# pysen ignores and overwrites any modifications
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
known_first_party = ["voicevox_engine"]
known_third_party = ["numpy"]
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.pytest.ini_options]
filterwarnings = ["ignore::pydantic.warnings.PydanticDeprecatedSince20"]

[tool.typos.default.extend-words]
datas = "datas" # PyInstaller's argument

[tool.typos.files]
extend-exclude = [
  "resources",
  "test/e2e/single_api/engine_info/__snapshots__/test_engine_manifest/test_get_engine_manifest_200.json",
  "poetry.*",
]

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "~3.11"
numpy = "^1.26.0"
fastapi-slim = "^0.112.2"
jinja2 = "^3.1.3" # NOTE: required by fastapi.templating.Jinja2Templates (fastapi-slim's unmanaged dependency)
python-multipart = "^0.0.9" # NOTE: required by fastapi.Form (fastapi-slim's unmanaged dependency)
uvicorn = "^0.30.6"
soundfile = "^0.12.1"
pyyaml = "^6.0.1"
pyworld-prebuilt = "^0.3.4.1"
pyopenjtalk-plus = "^0.3.4.post4"
semver = "^3.0.0"
platformdirs = "^4.2.0"
soxr = "^0.5.0"
pydantic = "^2.7.3"
starlette = "^0.38.4"
jaconv = "^0.3.4"
httpx = "^0.27.0"
# aivmlib は AIVM ファイルのメタデータ読み取りに必要
aivmlib = { git = "https://x-access-token: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@github.com/Aivis-Project/aivmlib.git", rev = "ea71cdff9e76bc99ed19769aa06d41a7d63146bb" }
# AivisSpeech-Engine にはカスタマイズされた Style-Bert-VITS2 が必要
style-bert-vits2 = { git = "https://github.com/tsukumijima/Style-Bert-VITS2", rev = "060b634539eeb464ce8b39562d5ed60a823c1cc1" }
# アーキテクチャに応じて適切な PyTorch をインストール
# ref: https://tech.layerx.co.jp/entry/2023/07/28/184937
torch = [
  # Windows: CUDA 12.1
  { url = "https://download.pytorch.org/whl/cu121/torch-2.3.1%2Bcu121-cp311-cp311-win_amd64.whl", markers = "sys_platform == 'win32'" },
  # macOS (Intel): CPU only
  # PyTorch 2.3 系では Intel Mac のサポートが廃止されたため、Intel Mac のみ 2.2.2 固定としている
  # ref: https://github.com/pytorch/pytorch/issues/114602
  { url = "https://download.pytorch.org/whl/cpu/torch-2.2.2-cp311-none-macosx_10_9_x86_64.whl", markers = "sys_platform == 'darwin' and platform_machine == 'x86_64'" },
  # macOS (Apple Silicon): CPU only
  { url = "https://download.pytorch.org/whl/cpu/torch-2.3.1-cp311-none-macosx_11_0_arm64.whl", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'" },
  # Linux: CUDA 12.1
  { url = "https://download.pytorch.org/whl/cu121/torch-2.3.1%2Bcu121-cp311-cp311-linux_x86_64.whl", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
  # Linux (ARM): CPU only
  { url = "https://download.pytorch.org/whl/cpu/torch-2.3.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'" },
]

[tool.poetry.group.dev.dependencies]
pysen = "^0.11.0"
black = "^24.4.0"
flake8-bugbear = "^24.4.26"
flake8 = "^7.0.0"
isort = "^5.13.0"
mypy = "^1.10.0"
pytest = "^8.2.0"
coveralls = "^4.0.1"
poetry = "1.8.3"
poetry-plugin-export = "^1.8.0"
httpx = "^0.27.0" # NOTE: required by fastapi.testclient.TestClient (fastapi-slim's unmanaged dependency)
syrupy = "^4.6.1"
types-pyyaml = "^6.0.12"
safety = "^3.1.0"
pip-licenses = "5.0.0" # NOTE: must be specified exactly (c.f. #1281)
pre-commit = "^3.8.0"

[tool.poetry.group.build.dependencies]
pyinstaller = "^5.13"
poetry = "1.8.3"
poetry-plugin-export = "^1.8.0"
taskipy = "^1.12.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
