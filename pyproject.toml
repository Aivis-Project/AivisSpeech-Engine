[tool.taskipy.tasks]
serve = "python run.py"
lint = "ruff check --fix ."
format = "ruff format ."
mypy = "mypy ."
typos = "typos"
test = "pytest"
update-snapshots = "pytest --snapshot-update"
update-licenses = "bash tools/create_venv_and_generate_licenses.bash"
build = "task update-licenses && pyinstaller --noconfirm run.spec"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "W", "UP", "D", "D213"]
ignore = [
  "E501", # line-too-long
  "D200", # AivisSpeech Engine ではコーディングスタイルに合わないため運用しない
  "D202", # AivisSpeech Engine ではコーディングスタイルに合わないため運用しない
  "D205", # AivisSpeech Engine ではコーディングスタイルに合わないため運用しない
  "D400", # missing-trailing-period。日本語の「。」に対応していないため。
  "D403", # first-word-uncapitalized。日本語とは無関係であるため。日英混合時の挙動に一貫性が無いため。
]
unfixable = [
  "F401", # unused-import
  "F841"  # unused-variable
]

[tool.ruff.lint.per-file-ignores]
"test/**/test_*.py" = ["D103"] # undocumented-public-function。pytest の対象 test_*() が D103 の対象になり、関数名から内容が自明でも docstring を強制されるため。

[tool.ruff.lint.isort]
known-first-party = ["voicevox_engine"]
known-third-party = ["numpy"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
strict = true
plugins = "numpy.typing.mypy_plugin,pydantic.mypy"
python_version = "3.11"
exclude = ["dist"]
ignore_missing_imports = true
warn_unreachable = false
warn_unused_ignores = false

[tool.pytest.ini_options]
filterwarnings = ["ignore::pydantic.warnings.PydanticDeprecatedSince20"]

[tool.typos.default.extend-words]
datas = "datas" # PyInstaller's argument

[tool.typos.files]
extend-exclude = [
  "resources",
  "test/e2e/single_api/engine_info/__snapshots__/test_engine_manifest/test_get_engine_manifest_200.json",
  "poetry.*",
  "README.md",
]

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "~3.11"
numpy = "^1.26.4"
fastapi-slim = "^0.115.5"
jinja2 = "^3.1.6" # NOTE: required by fastapi.templating.Jinja2Templates (fastapi-slim's unmanaged dependency)
python-multipart = "^0.0.20" # NOTE: required by fastapi.Form (fastapi-slim's unmanaged dependency)
uvicorn = "^0.34.0"
soundfile = "^0.13.1"
pyyaml = "^6.0.1"
pyworld-prebuilt = "^0.3.5.post1"
pyopenjtalk-plus = "^0.4.1.post3"
semver = "^3.0.0"
platformdirs = "^4.2.0"
soxr = "^0.5.0"
pydantic = "^2.7.3"
starlette = "^0.45.3"
jaconv = "^0.3.4"
httpx = "^0.28.1"
gputil = "^1.4.0"
psutil = "^6.1.1"
py-cpuinfo = "^9.0.0"
wmi = {version = "^1.5.1", platform = "win32"}
sentry-sdk = {version = "^2.19.2", extras = ["fastapi"]}
# truststore は HTTPS 通信時にシステムにインストールされた証明書ストアを使うために必要
## ref: https://github.com/psf/requests/issues/2966
## ref: https://truststore.readthedocs.io/en/latest/
truststore = "^0.10.0"
# aivmlib は AIVMX ファイルのメタデータ読み取りに必要
aivmlib = "^1.1.0"
# AivisSpeech-Engine にはカスタマイズされた Style-Bert-VITS2 が必要
style-bert-vits2 = { git = "https://github.com/tsukumijima/Style-Bert-VITS2", rev = "e7b22dc799bb2cbee1bd6ab4a3c7a9e8b2353ee9" }
# OS に応じて適切な ONNX Runtime プラグインをインストール
# onnxruntime (CPU): onnxruntime-directml / onnxruntime-gpu 非対応の環境すべて
onnxruntime = { version = "^1.21.0", markers = "(sys_platform != 'linux' or platform_machine != 'x86_64') and sys_platform != 'win32'" }
# onnxruntime (DirectML): Windows のみ
onnxruntime-directml = { version = "^1.21.0", markers = "sys_platform == 'win32'" }
# onnxruntime (GPU): Linux x64 のみ
onnxruntime-gpu = { version = "^1.21.0", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'" }

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
pytest = "^8.2.0"
coveralls = "^4.0.1"
httpx = "^0.28.1" # NOTE: required by fastapi.testclient.TestClient (fastapi-slim's unmanaged dependency)
syrupy = "^4.6.1"
types-pyyaml = "^6.0.12"
pip-licenses = "5.0.0" # NOTE: must be specified exactly (c.f. #1281)
pre-commit = "^4.0.1"
pip-audit = "^2.7.3"
ruff = "^0.11.1"
typos = "^1.31.1"

[tool.poetry.group.build.dependencies]
pyinstaller = "^5.13"
pip-licenses = "5.0.0" # NOTE: must be specified exactly (c.f. #1281)
taskipy = "^1.12.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
